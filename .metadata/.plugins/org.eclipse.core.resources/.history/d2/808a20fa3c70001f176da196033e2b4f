package com.example.tronics.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.tronics.model.User;
import com.example.tronics.repository.UserRepository;

@Service
public class UserService {

    @Autowired
    private AuthenticationManager authenticationManager;

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private BCryptPasswordEncoder encoder;

    public User createUser(String username, String password, String role) {
        String encodedPassword = encoder.encode(password); // Encode the password
        User user = new User(username, encodedPassword, role); // Save encoded password
        return userRepository.save(user);
    }

    public String verify(String username, String password) {
        User user = userRepository.findByUsername(username);

        if (user != null && encoder.matches(password, user.getPassword())) {
            return "success";
        }
        return "Invalid credentials"; // Better error message
    }
}
